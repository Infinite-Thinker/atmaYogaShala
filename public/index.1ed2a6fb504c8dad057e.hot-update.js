/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateatmayogashala"]("index",{

/***/ "./src/modules/scriptLoader":
/*!**********************************!*\
  !*** ./src/modules/scriptLoader ***!
  \**********************************/
/***/ ((module) => {

eval("// Dynamically load scripts\nconst loadScript = (FILE_URL, async = true, type = \"text/javascript\") => {\n    return new Promise((resolve, reject) => {\n        if (typeof loadScript.loadedScripts == \"undefined\") loadScript.loadedScripts = []\n        if (loadScript.loadedScripts.includes(FILE_URL)) {\n            console.error(\"Already Loading script !\")\n            reject({\n                status: false,\n                message: `Already loading/loaded the script ${FILE_URL}`,\n            })\n        } else {\n            try {\n                const scriptEle = document.createElement(\"script\")\n                scriptEle.type = type\n                scriptEle.async = async\n                scriptEle.src = FILE_URL\n                loadScript.loadedScripts.push(FILE_URL)\n                scriptEle.addEventListener(\"load\", ev => {\n                    console.log(\"loaded\")\n                    resolve({ status: true })\n                })\n\n                scriptEle.addEventListener(\"error\", ev => {\n                    console.error(ev)\n                    loadScript.loadedScripts.splice(loadScript.loadedScripts.indexOf(FILE_URL), 1)\n                    reject({\n                        status: false,\n                        message: `Failed to load the script ${FILE_URL}`,\n                    })\n                })\n\n                document.body.appendChild(scriptEle)\n            } catch (error) {\n                reject(error)\n            }\n        }\n    })\n}\n\nmodule.exports = loadScript\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9zY3JpcHRMb2FkZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxTQUFTO0FBQ3ZFLGFBQWE7QUFDYixVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixjQUFjO0FBQzVDLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxTQUFTO0FBQ3ZFLHFCQUFxQjtBQUNyQixpQkFBaUI7O0FBRWpCO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2F0bWF5b2dhc2hhbGEvLi9zcmMvbW9kdWxlcy9zY3JpcHRMb2FkZXI/NmY1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEeW5hbWljYWxseSBsb2FkIHNjcmlwdHNcbmNvbnN0IGxvYWRTY3JpcHQgPSAoRklMRV9VUkwsIGFzeW5jID0gdHJ1ZSwgdHlwZSA9IFwidGV4dC9qYXZhc2NyaXB0XCIpID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIGxvYWRTY3JpcHQubG9hZGVkU2NyaXB0cyA9PSBcInVuZGVmaW5lZFwiKSBsb2FkU2NyaXB0LmxvYWRlZFNjcmlwdHMgPSBbXVxuICAgICAgICBpZiAobG9hZFNjcmlwdC5sb2FkZWRTY3JpcHRzLmluY2x1ZGVzKEZJTEVfVVJMKSkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkFscmVhZHkgTG9hZGluZyBzY3JpcHQgIVwiKVxuICAgICAgICAgICAgcmVqZWN0KHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGBBbHJlYWR5IGxvYWRpbmcvbG9hZGVkIHRoZSBzY3JpcHQgJHtGSUxFX1VSTH1gLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2NyaXB0RWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKVxuICAgICAgICAgICAgICAgIHNjcmlwdEVsZS50eXBlID0gdHlwZVxuICAgICAgICAgICAgICAgIHNjcmlwdEVsZS5hc3luYyA9IGFzeW5jXG4gICAgICAgICAgICAgICAgc2NyaXB0RWxlLnNyYyA9IEZJTEVfVVJMXG4gICAgICAgICAgICAgICAgbG9hZFNjcmlwdC5sb2FkZWRTY3JpcHRzLnB1c2goRklMRV9VUkwpXG4gICAgICAgICAgICAgICAgc2NyaXB0RWxlLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIGV2ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJsb2FkZWRcIilcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh7IHN0YXR1czogdHJ1ZSB9KVxuICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICBzY3JpcHRFbGUuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsIGV2ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihldilcbiAgICAgICAgICAgICAgICAgICAgbG9hZFNjcmlwdC5sb2FkZWRTY3JpcHRzLnNwbGljZShsb2FkU2NyaXB0LmxvYWRlZFNjcmlwdHMuaW5kZXhPZihGSUxFX1VSTCksIDEpXG4gICAgICAgICAgICAgICAgICAgIHJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogYEZhaWxlZCB0byBsb2FkIHRoZSBzY3JpcHQgJHtGSUxFX1VSTH1gLFxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNjcmlwdEVsZSlcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsb2FkU2NyaXB0XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/scriptLoader\n");

/***/ })

});